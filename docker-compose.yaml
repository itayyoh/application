services:
  web:
    build:
      context: .
      target: runtime
    environment:
      - FLASK_APP=app
      - PYTHONUNBUFFERED=1
      - MONGO_USERNAME=${MONGO_APP_USERNAME}
      - MONGO_PASSWORD=${MONGO_APP_PASSWORD}
      - MONGO_DATABASE=${MONGO_DATABASE}
    volumes:
      - ./application/app/static:/app/static
    ports:
      - "5000:5000"
    healthcheck:
      test: ["CMD", "curl", "-s", "--fail", "http://localhost:5000/"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s
    networks:
      - app-network
    depends_on:
      mongodb:
        condition: service_healthy

  nginx:
    image: nginx:1.25.3
    volumes:
      - ./nginx:/etc/nginx:ro
      - ./application/app/static:/app/static:ro
    ports:
      - "80:80"
    depends_on:
      web:
        condition: service_healthy
    networks:
      - app-network

  mongodb:
    image: mongo:5.0.22
    env_file:
      - .env
    volumes:
      - mongodb_data:/data/db
      - ./mongo-init.js:/docker-entrypoint-initdb.d/mongo-init.js:ro
    healthcheck:
      test: echo 'db.runCommand("ping").ok' | mongosh localhost:27017/test --quiet
      interval: 10s
      timeout: 10s
      retries: 5
      start_period: 40s
    networks:
      - app-network

networks:
  app-network:
    driver: bridge

volumes:
  mongodb_data: